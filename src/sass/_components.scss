@import "variables";
@import "mixins";

.btn {
  font-family: inherit;
  font-weight: 700;
  text-shadow: inherit;
  color: inherit;
  background-color: transparent;
  backdrop-filter: blur(5px) saturate(150%);
  padding: 0.5rem 1rem;
  line-height: 0;
  display: grid;
  place-content: center;
  border-radius: 5px;
  text-transform: uppercase;
  cursor: pointer;
  transition: all 0.2s ease;
  outline: none;
  border: none;
  cursor: pointer;

  &--add {
    @extend .btn;
    padding: 1.5rem;
    width: 2rem;
    height: 2rem;
    @include border(unfocus);
    text-shadow: none;

    &:hover {
      background: transparent
        linear-gradient(transparent, rgba($cta-color, 0.5));
      transform: translateY(-2px);
      box-shadow: inset 2px 2px 0 rgba(white, 1),
        inset 2px -2px 0 rgba(white, 1), inset -2px 2px 0 rgba(white, 1),
        inset -2px -2px 0 rgba(white, 1), 0 0 1rem rgba($cta-color, 0.5);

      &:active {
        transform: translateY(0);
        background: white linear-gradient(transparent, transparent);
        box-shadow: inset 2px 2px 0 rgba(white, 1),
          inset 2px -2px 0 rgba(white, 1), inset -2px 2px 0 rgba(white, 1),
          inset -2px -2px 0 rgba(white, 1), 0 0 1rem rgba(white, 0.5);
      }
    }
  }

  &--cta {
    @extend .btn;
    line-height: unset;
    grid-column: 1 / -1;
    padding: 1rem 2rem;
    letter-spacing: 2px;
    font-size: 1.6rem;
    background-color: rgba($cta-color, 0.3);
    box-shadow: inset 2px 2px 0 rgba($cta-color, 1),
      inset 2px -2px 0 rgba($cta-color, 1), inset -2px 2px 0 rgba($cta-color, 1),
      inset -2px -2px 0 rgba($cta-color, 1);

    &:hover {
      text-shadow: 1px 1px 0 $cta-color, -1px -1px 0 $cta-color,
        1px -1px 0 $cta-color, -1px 1px 0 $cta-color;
      background: radial-gradient(
        circle,
        $cta-color 10%,
        rgba($cta-color, 0.3) 70%,
        transparent
      );
      box-shadow: inset 2px 2px 0 rgba($cta-color, 1),
        inset 2px -2px 0 rgba($cta-color, 1),
        inset -2px 2px 0 rgba($cta-color, 1),
        inset -2px -2px 0 rgba($cta-color, 1),
        inset 2px 2px 3rem rgba($cta-color, 0.2),
        inset 2px -2px 3rem rgba($cta-color, 0.2),
        inset -2px 2px 3rem rgba($cta-color, 0.2),
        inset -2px -2px 3rem rgba($cta-color, 0.2), 0 2px 3rem black;
      transform: scale(1.025) translateY(-0.25rem);
    }

    &:active {
      background: radial-gradient(circle, rgba(white, 0.5), transparent),
        $cta-color;
      transform: scale(1) translateY(0);
      box-shadow: inset 2px 2px 0 rgba($cta-color, 1),
        inset 2px -2px 0 rgba($cta-color, 1),
        inset -2px 2px 0 rgba($cta-color, 1),
        inset -2px -2px 0 rgba($cta-color, 1),
        inset 2px 2px 3rem rgba($cta-color, 0.2),
        inset 2px -2px 3rem rgba($cta-color, 0.2),
        inset -2px 2px 3rem rgba($cta-color, 0.2),
        inset -2px -2px 3rem rgba($cta-color, 0.2),
        2px 2px 3rem rgba($cta-color, 0.25),
        2px -2px 3rem rgba($cta-color, 0.25),
        -2px 2px 3rem rgba($cta-color, 0.25),
        -2px -2px 3rem rgba($cta-color, 0.25),
        25vw 2px 3rem rgba($cta-color, 0.25),
        -25vw -2px 3rem rgba($cta-color, 0.25);

      & span {
        text-shadow: 1px 1px 3rem rgba(white, 1), 1px -1px 3rem rgba(white, 1),
          -1px 1px 3rem rgba(white, 1), -1px -1px 3rem rgba(white, 1),
          5rem 1px 10rem rgba(white, 1), -5rem -1px 10rem rgba(white, 1);
        position: relative;

        &::before,
        &::after {
          content: "";
          height: 1rem;
          width: 100%;
          background: radial-gradient(
            circle,
            rgba(white, 0.65) 90%,
            rgba(white, 0.5)
          );
          position: absolute;
          top: 25%;
          box-shadow: 1px 1px 1rem rgba(white, 0.5),
            1px -1px 1rem rgba(white, 0.5), -1px 1px 1rem rgba(white, 0.5),
            -1px -1px 1rem rgba(white, 0.5), 5rem 1px 10rem rgba(white, 0.5),
            -5rem -1px 10rem rgba(white, 0.5);
          transition: all 0.3s ease-out;
        }

        &::before {
          transform: translateX(-50%) scaleX(2);
          animation: sideways-flare-left 0.3s;
          opacity: 0;
        }

        &::after {
          transform: translateX(-50%) scaleX(2);
          animation: sideways-flare-right 0.3s;
          opacity: 0;
        }
      }
    }
  }
}

@keyframes sideways-flare-left {
  0% {
    transform: translateX(-50%) scaleX(2);
    opacity: 1;
  }

  100% {
    transform: translateX(-1000%) scaleX(0.1);
    opacity: 0;
  }
}

@keyframes sideways-flare-right {
  0% {
    transform: translateX(-50%) scaleX(2);
    opacity: 1;
    animation-play-state: paused;
  }

  100% {
    transform: translateX(1000%) scaleX(0.1);
    opacity: 0;
    animation-play-state: paused;
  }
}

.radio-toggle {
  justify-self: center;
  display: grid;
  align-items: center;
  grid-template-columns: 1fr min-content 1fr;
  gap: 0.5rem;
  position: relative;

  & label {
    margin-bottom: 0.2rem;
    text-align: center;
  }

  &__input-a {
    opacity: 0;
    position: absolute;

    &:not(:checked) ~ .radio-toggle__label-a {
      color: gray;
    }

    &:checked ~ .radio-toggle__label-a {
      position: relative;

      &::before {
        content: "";
        position: absolute;
        top: 0;
        right: -4.85rem;
        height: 2.6rem;
        width: calc(100% + 5.5rem);
        background: rgba($cta-color, 0.15);
        box-shadow: inset 1px 1px 0 $cta-color, inset 1px -1px 0 $cta-color,
          inset -1px 1px 0 $cta-color, inset -1px -1px 0 $cta-color;
        z-index: -1;
        border-top-left-radius: 0.5rem;
        border-bottom-left-radius: 0.5rem;
        border-top-right-radius: 1.25rem;
        border-bottom-right-radius: 1.25rem;
      }
    }

    &:focus-visible ~ .radio-toggle__toggle::before,
    &:hover ~ .radio-toggle__toggle::before {
      @include border(midfocus);
      background: $focus-bg;
    }

    &:focus-visible ~ .radio-toggle__toggle::after,
    &:hover ~ .radio-toggle__toggle::after {
      background-color: white;
      box-shadow: 0 0 2rem white,
        .5rem .5rem 1rem rgba(white, .5),
        -.5rem .5rem 1rem rgba(white, .5),
        .5rem -.5rem 1rem rgba(white, .5),
        -.5rem -.5rem 1rem rgba(white, .5);
    }
  }

  &__input-b {
    opacity: 0;
    position: absolute;

    &:checked ~ .radio-toggle__toggle::after {
      left: 2rem;
    }

    &:not(:checked) ~ .radio-toggle__label-b {
      color: gray;
    }

    &:checked ~ .radio-toggle__label-b {
      position: relative;

      &::before {
        content: "";
        position: absolute;
        top: 0;
        left: -4.8rem;
        height: 2.6rem;
        width: calc(100% + 5.45rem);
        background: rgba($cta-color, 0.15);
        box-shadow: inset 1px 1px 0 $cta-color, inset 1px -1px 0 $cta-color,
          inset -1px 1px 0 $cta-color, inset -1px -1px 0 $cta-color;
        z-index: -1;
        border-top-right-radius: 0.5rem;
        border-bottom-right-radius: 0.5rem;
        border-top-left-radius: 1.25rem;
        border-bottom-left-radius: 1.25rem;
      }
    }

    &:focus-visible ~ .radio-toggle__toggle::before,
    &:hover ~ .radio-toggle__toggle::before {
      @include border(midfocus);
      background: $focus-bg;
    }

    &:focus-visible ~ .radio-toggle__toggle::after,
    &:hover ~ .radio-toggle__toggle::after {
      background-color: white;
      box-shadow: 0 0 2rem white,
        .5rem .5rem 1rem rgba(white, .5),
        -.5rem .5rem 1rem rgba(white, .5),
        .5rem -.5rem 1rem rgba(white, .5),
        -.5rem -.5rem 1rem rgba(white, .5);
    }

    &:checked ~ .radio-toggle__unset {
      z-index: 2;
    }
  }

  &__label-a {
  }

  &__label-b {
  }

  &__unset {
    display: block;
    width: 4rem;
    height: 2rem;
    grid-area: 1 / 2 / 2 / 3;
    position: absolute;
  }

  &__toggle {
    display: block;
    width: 4rem;
    height: 2rem;
    text-indent: -150%;
    clip: rect(0 0 0 0);
    color: transparent;
    user-select: none;
    position: relative;
    grid-area: 1 / 2 / 2 / 3;

    &::before,
    &::after {
      content: "";
      display: block;
      position: absolute;
      cursor: pointer;
    }

    &::before {
      width: 100%;
      height: 100%;
      background-color: rgba(black, 0.5);
      border-radius: 10rem;
      box-shadow: 
        inset 1px 1px 0 rgba($cta-color, 1),
        inset 1px -1px 0 rgba($cta-color, 1),
        inset -1px 1px 0 rgba($cta-color, 1),
        inset -1px -1px 0 rgba($cta-color, 1);
      transition: all 0.2s ease;
    }

    &::after {
      top: 0.2rem;
      left: 0.3rem;
      width: 1.65rem;
      height: 1.6rem;
      border-radius: 50%;
      background-color: $cta-color;
      background-image:
        linear-gradient(rgba(white, .7), transparent);
      border-top: 1px solid white;
      box-shadow: inset 0 2px 0 white;
      transition: all 0.2s ease;
    }
  }
}

.tag-box {
  display: grid;
  grid-template-columns: 1fr min-content;
  gap: 0.5rem;
  font-size: 1.4rem;
  margin: 0;
  border-radius: 5px;
  @include border(unfocus);

  &__summary {
    cursor: pointer;
    padding: 0.5rem 1rem;
    background: transparent;
    transition: all 0.2s ease-out;
    border-radius: 5px;

    &:focus {
      outline: none;
    }

    &:hover,
    &:focus-visible {
      background: $focus-bg;
      color: white;
      box-shadow: 0 2px 0 white, 0 1rem 1rem rgba($cta-color, 0.25);
    }

    .tag-box[open] &:hover,
    .tag-box[open] &:focus-visible {
      box-shadow: none;
      background: linear-gradient(rgba($cta-color, 0.5), transparent);
      box-shadow: 0 -2px 0 white, 0 -1rem 1rem rgba($cta-color, 0.25);
    }
  }

  &__tags {
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    align-items: center;
    padding: 0.5rem 0.5rem 0.5rem 1.5rem;

    &:empty:before {
      content: "No tags added.";
      color: gray;
      line-height: 1;
    }
  }

  &__tag {
    white-space: nowrap;
    background-color: rgba($cta-color, 0.15);
    box-shadow: inset 1px 1px 0 $cta-color, inset 1px -1px 0 $cta-color,
      inset -1px 1px 0 $cta-color, inset -1px -1px 0 $cta-color;
    border-radius: 10rem;
    padding: 0 1rem;
    max-width: 22ch;
    overflow: hidden;
    text-overflow: ellipsis;
    position: relative;
    transition: all 0.2s ease-out;

    &:hover .tag-box__tag-remove::before {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      margin-top: -1.5rem;
      margin-left: -1.5rem;
      width: 3rem;
      height: 3rem;
      border-radius: 50%;
    }

    &-remove {
      position: relative;
      display: inline-block;
      color: gray;
      transform: scale(0);
      width: 0;
      min-width: 0;
      min-height: 0;
      line-height: 0;
      border-radius: 50%;
      border: 0 solid transparent;
      transition: all 0.2s ease-out;
      outline: none;

      &:hover,
      &:focus-visible {
        margin-left: -1rem;
        min-width: 3rem;
        min-height: 3rem;
        color: white;
        border-radius: 50%;
        border: 1px solid white;
        display: inline-grid;
        place-content: center;
        text-decoration: none;
      }
    }

    &:hover &-remove,
    &-remove:focus-visible {
      width: min-content;
      transform: scale(1);
      margin-right: 0.5rem;
    }

    &-form-save {
      display: none;
    }
  }

  &__expand-container {
    padding: 1rem;
    padding-top: 0;
    margin-left: 1.25rem;
    display: grid;
    grid-template-columns: 1fr min-content;
    gap: 0.5rem;
    align-items: center;
  }

  &__add-input {
    @include box(input);
    width: 100%;
    font-size: 1.6rem !important;
  }

  &__add-btn {
  }
}

.checkbox {
  @include box(input);

  &:checked {
    box-shadow: inset 1px 1px 0 rgba($cta-color, 1),
      inset 1px -1px 0 rgba($cta-color, 1), inset -1px 1px 0 rgba($cta-color, 1),
      inset -1px -1px 0 rgba($cta-color, 1);

    &::before {
      position: absolute;
      left: 0.5rem;
      text-align: center;
      text-shadow: none;
    }
  }
}

.checkbox-box {
  display: grid;
  grid-template-columns: 1fr min-content;
  gap: 0.5rem;
  font-size: 1.4rem;
  margin: 0;
  border-radius: 5px;
  @include border(unfocus);

  &__summary {
    cursor: pointer;
    padding: 0.5rem 1rem;
    background: transparent;
    transition: all 0.2s ease-out;
    border-radius: 5px;

    &:focus {
      outline: none;
    }

    &:hover,
    &:focus-visible {
      background: $focus-bg;
      color: white;
      box-shadow: 0 2px 0 white, 0 1rem 1rem rgba($cta-color, 0.25);
    }

    .checkbox-box[open] &:hover,
    .checkbox-box[open] &:focus-visible {
      box-shadow: none;
      background: linear-gradient(rgba($cta-color, 0.5), transparent);
      box-shadow: 0 -2px 0 white, 0 -1rem 1rem rgba($cta-color, 0.25);
    }

    .checkbox-box[open] & > .checkbox-box__tags {
      display: none;
    }
  }

  &__tags {
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    align-items: center;
    padding: 0.5rem 0.5rem 0.5rem 1.5rem;

    & span {
      color: gray;
      line-height: 1;
    }
  }

  &__tag {
    white-space: nowrap;
    background-color: rgba($cta-color, 0.15);
    box-shadow: inset 1px 1px 0 $cta-color, inset 1px -1px 0 $cta-color,
      inset -1px 1px 0 $cta-color, inset -1px -1px 0 $cta-color;
    border-radius: 10rem;
    padding: 0 1rem;
    max-width: 22ch;
    overflow: hidden;
    text-overflow: ellipsis;
    position: relative;
    transition: all 0.2s ease-out;

    &:hover .tag-box__tag-remove::before {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      margin-top: -1.5rem;
      margin-left: -1.5rem;
      width: 3rem;
      height: 3rem;
      border-radius: 50%;
    }

    &-remove {
      position: relative;
      display: inline-block;
      color: gray;
      transform: scale(0);
      width: 0;
      min-width: 0;
      min-height: 0;
      line-height: 0;
      border-radius: 50%;
      border: 0 solid transparent;
      transition: all 0.2s ease-out;
      outline: none;

      &:hover,
      &:focus-visible {
        margin-left: -1rem;
        min-width: 3rem;
        min-height: 3rem;
        color: white;
        border-radius: 50%;
        border: 1px solid white;
        display: inline-grid;
        place-content: center;
        text-decoration: none;
      }
    }

    &:hover &-remove,
    &-remove:focus-visible {
      width: min-content;
      transform: scale(1);
      margin-right: 0.5rem;
    }
  }

  &__expand-container {
    padding: 1rem;
    padding-top: 0;
    margin-left: 1.25rem;
    margin-top: 0.5rem;
    display: grid;
    grid-template-columns: 1fr min-content;
    align-items: center;
    gap: 0.5rem;
  }

  &__checklist {
    display: grid;
    gap: 0.5rem;
    grid-column: 1/ -1;
  }

  &__checkbox-label {
    @include border(unfocus);
    border-radius: 3px;
    background-color: transparent;
    padding: 1rem;
    transition: all 0.1s ease-in;
    position: relative;

    &:hover input[type="checkbox"] + span::after,
    & input[type="checkbox"]:focus-visible + span::after {
      opacity: 1;
      background-color: rgba(white, 0.15);
    }
  }

  &__checkbox {
    & + .checkbox-box__text::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;
      width: 100%;
      height: 100%;
      border-radius: 3px;
      // opacity: 0;
      background-color: transparent;
      backdrop-filter: blur(10px);
      transition: all 0.1s ease-in;
    }

    &:checked + .checkbox-box__text::after {
      opacity: 1;
      background-color: rgba($cta-color, 0.15) !important;
      box-shadow: inset 1px 1px 0 $cta-color, inset 1px -1px 0 $cta-color,
        inset -1px 1px 0 $cta-color, inset -1px -1px 0 $cta-color;
    }
  }

  &__add-input {
    @include box(input);
    width: 100%;
    font-size: 1.6rem !important;
  }
}
